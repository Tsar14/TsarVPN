import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.utils.markdown import text
from aiogram.enums import ParseMode
from aiogram.utils.token import TokenValidationError
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=os.getenv('BOT_TOKEN'))
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")],
        [KeyboardButton(text="–ü–æ–º–æ—â—å")],
        [KeyboardButton(text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")],
        [KeyboardButton(text="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
account_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–û–±–Ω–æ–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç")],
        [KeyboardButton(text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")],
        [KeyboardButton(text="–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏")],
        [KeyboardButton(text="–ú–æ–∏ –∫–ª—é—á–∏")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
tariff_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üöÄ –°—Ç–∞—Ä—Ç")],
        [KeyboardButton(text="üõã –ö–æ–º—Ñ–æ—Ä—Ç")],
        [KeyboardButton(text="üåü –ú–∞–∫—Å–∏–º—É–º")],
        [KeyboardButton(text="üë• –î–ª—è –¥—Ä—É–∑–µ–π")],
        [KeyboardButton(text="–¢–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–µ—Ö–¥–Ω–µ–≤–Ω—ã–π")],
        [KeyboardButton(text="üèõ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ],
    resize_keyboard=True
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TsarVPN!", reply_markup=main_menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
@dp.message(lambda message: message.text == "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
async def account_info(message: types.Message):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
    user_name = message.from_user.full_name
    user_info = text(
        "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n",
        f"üë§ –ò–º—è: {user_name}\n",
        "üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏: 0\n",
        "ü§ù –†–µ—Ñ–µ—Ä–∞–ª—ã: 0\n",
        "üìÜ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: 17.01.2025\n",
        "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:"
    )
    await message.answer(user_info, reply_markup=account_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"
@dp.message(lambda message: message.text == "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
async def choose_tariff(message: types.Message):
    tariff_info = text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ Vless:\n",
        "üöÄ –°—Ç–∞—Ä—Ç: –æ—Ç 99‚ÇΩ/–º–µ—Å –∑–∞ 1 –∫–ª—é—á\n",
        "üõã –ö–æ–º—Ñ–æ—Ä—Ç: –æ—Ç 190‚ÇΩ/–º–µ—Å –∑–∞ 2 –∫–ª—é—á–∞ (—Ü–µ–Ω–∞ –∑–∞ –∫–ª—é—á –Ω–∞ 5% –Ω–∏–∂–µ)\n",
        "üåü –ú–∞–∫—Å–∏–º—É–º: –æ—Ç 270‚ÇΩ/–º–µ—Å –∑–∞ 3 –∫–ª—é—á–∞ (—Ü–µ–Ω–∞ –∑–∞ –∫–ª—é—á –Ω–∞ 10% –Ω–∏–∂–µ)\n",
        "üë• –î–ª—è –¥—Ä—É–∑–µ–π: –æ—Ç 425‚ÇΩ/–º–µ—Å –∑–∞ 5 –∫–ª—é—á–µ–π (—Ü–µ–Ω–∞ –∑–∞ –∫–ª—é—á –Ω–∞ 15% –Ω–∏–∂–µ)\n",
        "‚ú® –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–∞ 6/12 –º–µ—Å—è—Ü–µ–≤: +14/28 –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π\n",
        "üíé –ö–∞–∂–¥—ã–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ –Ω–∞ 5% –≤—ã–≥–æ–¥–Ω–µ–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤ —Ä–∞—Å—á–µ—Ç–µ –Ω–∞ –æ–¥–∏–Ω –∫–ª—é—á"
    )
    await message.answer(tariff_info, reply_markup=tariff_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üèõ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@dp.message(lambda message: message.text == "üèõ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_to_main_menu(message: types.Message):
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üöÄ –°—Ç–∞—Ä—Ç"
@dp.message(lambda message: message.text == "üöÄ –°—Ç–∞—Ä—Ç")
async def start_tariff(message: types.Message):
    tariff_details = text(
        "–¢–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ Vless:\n",
        "üöÄ –°—Ç–∞—Ä—Ç:\n",
        "–£—Å—Ç—Ä–æ–π—Å—Ç–≤: 1\n",
        "–¶–µ–Ω–∞ –∑–∞ 1 –º–µ—Å—è—Ü: 99.00 RUB\n",
        "–¶–µ–Ω–∞ –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤: 594.00 RUB (–ë–æ–Ω—É—Å: 15 –¥–Ω–µ–π)\n",
        "–¶–µ–Ω–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤: 1188.00 RUB (–ë–æ–Ω—É—Å: 30 –¥–Ω–µ–π)\n",
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã:"
    )
    inline_kb = InlineKeyboardBuilder()
    inline_kb.add(InlineKeyboardButton(text="1 –º–µ—Å—è—Ü", callback_data="start_1_month"))
    inline_kb.add(InlineKeyboardButton(text="6 –º–µ—Å—è—Ü–µ–≤", callback_data="start_6_months"))
    inline_kb.add(InlineKeyboardButton(text="12 –º–µ—Å—è—Ü–µ–≤", callback_data="start_12_months"))
    await message.answer(tariff_details, reply_markup=inline_kb.as_markup())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üõã –ö–æ–º—Ñ–æ—Ä—Ç"
@dp.message(lambda message: message.text == "üõã –ö–æ–º—Ñ–æ—Ä—Ç")
async def comfort_tariff(message: types.Message):
    tariff_details = text(
        "–¢–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ Vless:\n",
        "üõã –ö–æ–º—Ñ–æ—Ä—Ç:\n",
        "–£—Å—Ç—Ä–æ–π—Å—Ç–≤: 2\n",
        "–¶–µ–Ω–∞ –∑–∞ 1 –º–µ—Å—è—Ü: 190.00 RUB\n",
        "–¶–µ–Ω–∞ –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤: 1140.00 RUB (–ë–æ–Ω—É—Å: 15 –¥–Ω–µ–π)\n",
        "–¶–µ–Ω–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤: 2280.00 RUB (–ë–æ–Ω—É—Å: 30 –¥–Ω–µ–π)\n",
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã:"
    )
    inline_kb = InlineKeyboardBuilder()
    inline_kb.add(InlineKeyboardButton(text="1 –º–µ—Å—è—Ü", callback_data="comfort_1_month"))
    inline_kb.add(InlineKeyboardButton(text="6 –º–µ—Å—è—Ü–µ–≤", callback_data="comfort_6_months"))
    inline_kb.add(InlineKeyboardButton(text="12 –º–µ—Å—è—Ü–µ–≤", callback_data="comfort_12_months"))
    await message.answer(tariff_details, reply_markup=inline_kb.as_markup())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üåü –ú–∞–∫—Å–∏–º—É–º"
@dp.message(lambda message: message.text == "üåü –ú–∞–∫—Å–∏–º—É–º")
async def maximum_tariff(message: types.Message):
    tariff_details = text(
        "–¢–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ Vless:\n",
        "üåü –ú–∞–∫—Å–∏–º—É–º:\n",
        "–£—Å—Ç—Ä–æ–π—Å—Ç–≤: 3\n",
        "–¶–µ–Ω–∞ –∑–∞ 1 –º–µ—Å—è—Ü: 270.00 RUB\n",
        "–¶–µ–Ω–∞ –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤: 1620.00 RUB (–ë–æ–Ω—É—Å: 15 –¥–Ω–µ–π)\n",
        "–¶–µ–Ω–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤: 3240.00 RUB (–ë–æ–Ω—É—Å: 30 –¥–Ω–µ–π)\n",
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã:"
    )
    inline_kb = InlineKeyboardBuilder()
    inline_kb.add(InlineKeyboardButton(text="1 –º–µ—Å—è—Ü", callback_data="maximum_1_month"))
    inline_kb.add(InlineKeyboardButton(text="6 –º–µ—Å—è—Ü–µ–≤", callback_data="maximum_6_months"))
    inline_kb.add(InlineKeyboardButton(text="12 –º–µ—Å—è—Ü–µ–≤", callback_data="maximum_12_months"))
    await message.answer(tariff_details, reply_markup=inline_kb.as_markup())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üë• –î–ª—è –¥—Ä—É–∑–µ–π"
@dp.message(lambda message: message.text == "üë• –î–ª—è –¥—Ä—É–∑–µ–π")
async def friends_tariff(message: types.Message):
    tariff_details = text(
        "–¢–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ Vless:\n",
        "üë• –î–ª—è –¥—Ä—É–∑–µ–π:\n",
        "–£—Å—Ç—Ä–æ–π—Å—Ç–≤: 5\n",
        "–¶–µ–Ω–∞ –∑–∞ 1 –º–µ—Å—è—Ü: 425.00 RUB\n",
        "–¶–µ–Ω–∞ –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤: 2550.00 RUB (–ë–æ–Ω—É—Å: 15 –¥–Ω–µ–π)\n",
        "–¶–µ–Ω–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤: 5100.00 RUB (–ë–æ–Ω—É—Å: 30 –¥–Ω–µ–π)\n",
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã:"
    )
    inline_kb = InlineKeyboardBuilder()
    inline_kb.add(InlineKeyboardButton(text="1 –º–µ—Å—è—Ü", callback_data="friends_1_month"))
    inline_kb.add(InlineKeyboardButton(text="6 –º–µ—Å—è—Ü–µ–≤", callback_data="friends_6_months"))
    inline_kb.add(InlineKeyboardButton(text="12 –º–µ—Å—è—Ü–µ–≤", callback_data="friends_12_months"))
    await message.answer(tariff_details, reply_markup=inline_kb.as_markup())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline –∫–Ω–æ–ø–æ–∫
@dp.callback_query()
async def process_callback(callback_query: types.CallbackQuery):
    data = callback_query.data
    if data.startswith("start"):
        tariff_name = "üöÄ –°—Ç–∞—Ä—Ç"
        price_1_month = 99.00
        price_6_months = 594.00
        price_12_months = 1188.00
        devices = 1
    elif data.startswith("comfort"):
        tariff_name = "üõã –ö–æ–º—Ñ–æ—Ä—Ç"
        price_1_month = 190.00
        price_6_months = 1140.00
        price_12_months = 2280.00
        devices = 2
    elif data.startswith("maximum"):
        tariff_name = "üåü –ú–∞–∫—Å–∏–º—É–º"
        price_1_month = 270.00
        price_6_months = 1620.00
        price_12_months = 3240.00
        devices = 3
    elif data.startswith("friends"):
        tariff_name = "üë• –î–ª—è –¥—Ä—É–∑–µ–π"
        price_1_month = 425.00
        price_6_months = 2550.00
        price_12_months = 5100.00
        devices = 5
    else:
        await callback_query.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ")
        return

    if data.endswith("1_month"):
        duration = "1 –º–µ—Å—è—Ü"
        price = price_1_month
        bonus_days = 0
    elif data.endswith("6_months"):
        duration = "6 –º–µ—Å—è—Ü–µ–≤"
        price = price_6_months
        bonus_days = 14
    elif data.endswith("12_months"):
        duration = "12 –º–µ—Å—è—Ü–µ–≤"
        price = price_12_months
        bonus_days = 28
    else:
        await callback_query.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
        return

    subscription_info = text(
        f"–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: {tariff_name}\n",
        f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}\n",
        f"–¶–µ–Ω–∞: {price:.2f} —Ä—É–±.\n",
        f"–ë–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏: {bonus_days}\n",
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {devices}\n",
        "–ü—Ä–æ—Ç–æ–∫–æ–ª: VLESS"
    )
    inline_kb = InlineKeyboardBuilder()
    inline_kb.add(InlineKeyboardButton(text=f"–ó–∞–ø–ª–∞—Ç–∏—Ç—å {price:.2f} —Ä—É–±", callback_data=f"pay_{price}"))
    await callback_query.message.answer(subscription_info, reply_markup=inline_kb.as_markup())

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
